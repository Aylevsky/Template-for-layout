@use "sass:math";
@import "./const.scss";

/**
  * Миксин который позволяет создавать отзывчивые свойства.
  * Их значение меняется в зависимости от размера экрана.
*/
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$maxWidth: strip-unit(map-get($media, xl, width));
	$maxWidthContainer: strip-unit(map-get($media, xl, container));
	$addSize: $startSize - $minSize;
	$mobileWidth: strip-unit(map-get($media, sm, width));

	@if $type ==1 {
		// Max
		#{$property}: $startSize + px;

		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$mobileWidth + px}) / #{$maxWidthContainer - $mobileWidth}));
		}
	} @else if $type ==2 {
		// Min
		#{$property}: $startSize + px;

		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$mobileWidth + px}) / #{$maxWidth - $mobileWidth}));
		}
	} @else {
		// Всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$mobileWidth + px}) / #{$maxWidth - $mobileWidth}));
	}
}

/**
  * Сокращение для медиазапросов.
*/
@mixin media($minmax, $media) {
	@if $media == "sm" {
		@media (#{$minmax}-width: map-get($media, "sm", "width")) {
			@content;
		}
	} @else if $media == "md" {
		@media (#{$minmax}-width: map-get($media, "md", "width")) {
			@content;
		}
	} @else if $media == "lg" {
		@media (#{$minmax}-width: map-get($media, "lg", "width")) {
			@content;
		}
	} @else if $media == "xl" {
		@media (#{$minmax}-width: map-get($media, "xl", "width")) {
			@content;
		}
	}
}

/**
  * Устанавливает line-height в процентах.
  *
  * Переводит line-height из пт в проценты.
*/
@mixin line-height($font-size, $line-height) {
	$lineHeightInPercent: math.div($line-height, math.div($font-size, 100));
	line-height: #{$lineHeightInPercent + "%"};
}

/**
  * Адаптивный размер.
  *
  * Добавляет адаптивную длинну и ширину. Если получает 2 аргумента, а не 4
  * считает что блок квадратный и использует $w и $w2 не только для длинны,
  * но и для ширины.
*/
@mixin ad-size($w, $w2, $h: "none", $h2: "none") {
	@if ($h == "none") {
		@include adaptiv-value(width, $w, $w2, 1);
		@include adaptiv-value(height, $w, $w2, 1);
	} @else {
		@include adaptiv-value(width, $w, $w2, 1);
		@include adaptiv-value(height, $h, $h2, 1);
	}
}

/**
  * Миксин размера.
  * Позволяет удобно задавать ширину и длинну.
  * Если аргумент один то ширина и длинна будут одинаковыми.
*/
@mixin size($w, $h: "none") {
	@if ($h == "none") {
		width: $w;
		height: $w;
	} @else {
		width: $w;
		height: $h;
	}
}
